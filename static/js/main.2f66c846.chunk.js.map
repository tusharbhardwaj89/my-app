{"version":3,"sources":["logo.svg","SearchAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","root","flexGrow","width","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","people","useStyles","paper","margin","App","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","classes","useEffect","fetch","then","response","status","json","data","console","log","filter","person","catch","err","results","length","toLowerCase","includes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","value","onChange","event","target","Grid","container","item","map","index","Paper","gutterBottom","platform","genre","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f66c846.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>          \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n/** material-ui **/\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchAppBar from './SearchAppBar';\n\nlet people = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    width: 400,\n  },  \n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nfunction App() {\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const classes = useStyles();\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  \n  useEffect(() => {\n    fetch('http://starlord.hackerearth.com/gamesarena')\n            .then(\n                function (response) {\n                    if (response.status !== 200) {\n                        return;\n                    }                    \n                    response.json().then(function (data) {\n                      console.log(data);\n                      people = data.filter(person => person.title);\n                      setSearchResults(people);\n                    });\n                }\n            )\n            .catch(function (err) {\n            });\n  }, []);\n\n  useEffect(() => {\n    const results = people.length > 0 ? people.filter(person =>\n      person.title && person.title.toLowerCase().includes(searchTerm)\n    ) : [];\n    setSearchResults(results);\n  }, [searchTerm]);\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppBar position=\"sticky\">\n          <Toolbar>          \n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Material-UI\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Searchâ€¦\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={searchTerm}\n                onChange={handleChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n         \n        <br/>\n\n        <div className={classes.root}>\n             <Grid container spacing={1}>\n                <Grid container item spacing={3}>\n                  {searchResults.map((data, index) => (\n                      <Grid key={index} item>\n                        <Paper className={classes.paper}>\n                           <Typography gutterBottom variant=\"subtitle1\">\n                              {data.title}\n                            </Typography>\n                            <Typography variant=\"body2\" gutterBottom>\n                                {data.platform}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {data.genre}\n                            </Typography>                      \n                        </Paper>\n                      </Grid>\n                    ))}\n                </Grid>\n             </Grid>\n          </div>   \n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}